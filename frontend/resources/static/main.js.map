{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/books.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {BooksService} from './books.service';\nimport {Book, BookDetails} from './model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'envoy-snt';\n\n  selectedBook: Book = null;\n  selectedBookDetails: BookDetails = null;\n  books: Book[];\n\n  constructor(private service: BooksService) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.books = await this.service.getAllBooks();\n  }\n\n  async select(book: Book) {\n    this.selectedBook = book;\n    this.selectedBookDetails = await this.service.getBookDetails(book.id);\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav mode=\"side\" opened>\n    <mat-list>\n      <mat-list-item\n        *ngFor=\"let book of books\"\n        (click)=\"select(book)\"\n        class=\"book\"\n        [class.selected]=\"selectedBook === book\">\n        {{book.title}}\n      </mat-list-item>\n    </mat-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div *ngIf=\"selectedBookDetails\">\n      <mat-card>\n        <mat-card-title>{{selectedBookDetails.details.title}}</mat-card-title>\n        <mat-card-subtitle>{{selectedBookDetails.details.author}}</mat-card-subtitle>\n        <mat-card-content>{{selectedBookDetails.details.description}}</mat-card-content>\n      </mat-card>\n      <mat-card>\n        <mat-card-title>Reviews</mat-card-title>\n        <mat-card-content>\n          <mat-card *ngFor=\"let review of selectedBookDetails.reviews\" class=\"review\">\n            <mat-card-title>Rating: {{review.rating}}</mat-card-title>\n            <mat-card-content>{{review.text}}</mat-card-content>\n          </mat-card>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div *ngIf=\"!selectedBookDetails\">\n      Please select a book\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Book, BookDetails} from './model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllBooks(): Promise<Book[]> {\n    return this.httpClient.get<Book[]>(\"/api/books\", {observe: 'response', headers: {\n        \"X-b3-sampled\": \"1\"\n      }})\n      .toPromise()\n      .then(res => {\n        if (res.ok) {\n          return res.body;\n        } else {\n          throw res.statusText;\n        }\n      });\n  }\n\n  getBookDetails(id: string): Promise<BookDetails> {\n    return this.httpClient.get<BookDetails>(`/api/books/${id}`, { observe: 'response', headers: {\n        \"X-b3-sampled\": \"1\"\n      }})\n      .toPromise()\n      .then(res => {\n        if (res.ok) {\n          return res.body;\n        } else {\n          throw res.statusText;\n        }\n      })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}